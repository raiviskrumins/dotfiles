"""Add submitted status to export table.

Revision ID: 20e44a50209
Revises: 4d3b4a051bc0
Create Date: 2015-09-23 15:20:10.243062

"""

# revision identifiers, used by Alembic.
revision = '20e44a50209'
down_revision = '4d3b4a051bc0'
from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    status_types = conn.execute('SELECT id, status FROM export')
    op.drop_column('export', 'status')
    conn.execute('DROP TYPE IF EXISTS running_status')
    conn.execute("CREATE TYPE running_status AS ENUM ('not_started', 'submitted', 'running', 'complete', 'failed')")
    op.add_column(
        'export',
        sa.Column('status', sa.Enum('not_started', 'submitted', 'running', 'complete', 'failed', name='running_status'),
        nullable=True)
    )
    for status_type in status_types:
        conn.execute(
            sa.text("UPDATE export SET status= :status_type WHERE id = :id "),
            {
                'id': status_type[0],
                'status_type': status_type[1]
            }
        )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    status_types = conn.execute('SELECT id, status FROM export')
    op.drop_column('export', 'status')
    conn.execute('DROP TYPE IF EXISTS running_status')
    conn.execute("CREATE TYPE running_status AS ENUM ('not_started', 'running', 'complete', 'failed')")
    op.add_column(
        'export',
        sa.Column('status', sa.Enum('not_started', 'running', 'complete', 'failed', name='running_status'),
        nullable=True)
    )
    for status_type in status_types:
        if status_type[1] is 'submitted':
            conn.execute(
                sa.text("UPDATE export SET status='not_started' WHERE id = :id "),
                {'id': status_type[0]}
            )
        else:
            conn.execute(
                sa.text("UPDATE export SET status= :status_type WHERE id = :id "),
                {
                    'id': status_type[0],
                    'status_type': status_type[1]
                }
            )

    ### end Alembic commands ###
